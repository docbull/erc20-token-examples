{"ast":null,"code":"require('dotenv').config();\n\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\n\nconst {\n  createAlchemyWeb3\n} = require(\"@alch/alchemy-web3\");\n\nconst web3 = createAlchemyWeb3(alchemyKey);\n\nconst contractABI = require('../contract-abi.json');\n\nconst contractAddress = '0x6f3f635A9762B47954229Ea479b4541eAF402A6A';\nexport const helloWorldContract = new web3.eth.Contract(contractABI, contractAddress);\nexport const loadCurrentMessage = async () => {\n  const message = await helloWorldContract.methods.message().call();\n  console.log(message);\n  return message;\n};\nexport const connectWallet = async () => {};\nexport const getCurrentWalletConnected = async () => {};\nexport const updateMessage = async (address, message) => {};","map":{"version":3,"sources":["/home/inlab/NFT-practices/hello-world-part-four-tutorial/starter-files/src/util/interact.js"],"names":["require","config","alchemyKey","process","env","REACT_APP_ALCHEMY_KEY","createAlchemyWeb3","web3","contractABI","contractAddress","helloWorldContract","eth","Contract","loadCurrentMessage","message","methods","call","console","log","connectWallet","getCurrentWalletConnected","updateMessage","address"],"mappings":"AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA/B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAwBN,OAAO,CAAC,oBAAD,CAArC;;AACA,MAAMO,IAAI,GAAGD,iBAAiB,CAACJ,UAAD,CAA9B;;AAEA,MAAMM,WAAW,GAAGR,OAAO,CAAC,sBAAD,CAA3B;;AACA,MAAMS,eAAe,GAAG,4CAAxB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,IAAIH,IAAI,CAACI,GAAL,CAASC,QAAb,CAC9BJ,WAD8B,EAE9BC,eAF8B,CAA3B;AAKP,OAAO,MAAMI,kBAAkB,GAAG,YAAY;AAC5C,QAAMC,OAAO,GAAG,MAAMJ,kBAAkB,CAACK,OAAnB,CAA2BD,OAA3B,GAAqCE,IAArC,EAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,SAAOA,OAAP;AACD,CAJM;AAMP,OAAO,MAAMK,aAAa,GAAG,YAAY,CAExC,CAFM;AAIP,OAAO,MAAMC,yBAAyB,GAAG,YAAY,CAEpD,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAG,OAAOC,OAAP,EAAgBR,OAAhB,KAA4B,CAExD,CAFM","sourcesContent":["require('dotenv').config();\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\nconst web3 = createAlchemyWeb3(alchemyKey);\n\nconst contractABI = require('../contract-abi.json');\nconst contractAddress = '0x6f3f635A9762B47954229Ea479b4541eAF402A6A';\n\nexport const helloWorldContract = new web3.eth.Contract(\n    contractABI,\n    contractAddress,\n);\n\nexport const loadCurrentMessage = async () => { \n  const message = await helloWorldContract.methods.message().call();\n  console.log(message);\n  return message;\n};\n\nexport const connectWallet = async () => {\n  \n};\n\nexport const getCurrentWalletConnected = async () => {\n  \n};\n\nexport const updateMessage = async (address, message) => {\n  \n};\n"]},"metadata":{},"sourceType":"module"}